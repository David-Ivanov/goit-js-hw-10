{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\n\n\n\nconst startBtn = document.querySelector(\"[data-start]\");\nconst daysTimer = document.querySelector(\"[data-days]\");\nconst hoursTimer = document.querySelector(\"[data-hours]\");\nconst minutesTimer = document.querySelector(\"[data-minutes]\");\nconst secondsTimer = document.querySelector(\"[data-seconds]\");\n\nlet userSelectedDate;\n\nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n        if (new Date() < selectedDates[0]) {\n            userSelectedDate = selectedDates[0];\n            console.log(userSelectedDate);\n            startBtn.disabled = false;\n        } else {\n            makeDisableBtn();\n            alert(\"Please choose a date in the future\");\n        }\n\n    },\n};\nflatpickr(\"#datetime-picker\", options);\n\nstartBtn.addEventListener('click', () => {\n    makeDisableBtn();\n    let userSelectedDateInMs = userSelectedDate.getTime();\n\n    const intervalId = setInterval(() => {\n        const differenceInTime = convertMs(userSelectedDateInMs - new Date());\n        const { days, hours, minutes, seconds } = differenceInTime;\n\n        daysTimer.innerHTML = days;\n        hoursTimer.innerHTML = hours;\n        minutesTimer.innerHTML = minutes;\n        secondsTimer.innerHTML = seconds;\n\n\n        userSelectedDateInMs = userSelectedDateInMs - 100;\n        console.log(userSelectedDateInMs);\n    }, 1000);\n\n    setTimeout(() => clearInterval(intervalId), userSelectedDateInMs - new Date() - 100);\n\n});\n\n\nfunction makeDisableBtn() {\n    startBtn.disabled = true;\n}\n\nfunction convertMs(ms) {\n    // Number of milliseconds per unit of time\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n\n    // Remaining days\n    const days = Math.floor(ms / day);\n    // Remaining hours\n    const hours = Math.floor((ms % day) / hour);\n    // Remaining minutes\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    // Remaining seconds\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n    return { days, hours, minutes, seconds };\n}"],"names":["startBtn","daysTimer","hoursTimer","minutesTimer","secondsTimer","userSelectedDate","options","selectedDates","makeDisableBtn","flatpickr","userSelectedDateInMs","intervalId","differenceInTime","convertMs","days","hours","minutes","seconds","ms"],"mappings":"ivBAKA,MAAMA,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAY,SAAS,cAAc,aAAa,EAChDC,EAAa,SAAS,cAAc,cAAc,EAClDC,EAAe,SAAS,cAAc,gBAAgB,EACtDC,EAAe,SAAS,cAAc,gBAAgB,EAE5D,IAAIC,EAEJ,MAAMC,EAAU,CACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACf,IAAI,KAASA,EAAc,IAC3BF,EAAmBE,EAAc,GACjC,QAAQ,IAAIF,CAAgB,EAC5BL,EAAS,SAAW,KAEpBQ,IACA,MAAM,oCAAoC,EAGjD,CACL,EACAC,EAAU,mBAAoBH,CAAO,EAErCN,EAAS,iBAAiB,QAAS,IAAM,CACrCQ,IACA,IAAIE,EAAuBL,EAAiB,UAE5C,MAAMM,EAAa,YAAY,IAAM,CACjC,MAAMC,EAAmBC,EAAUH,EAAuB,IAAI,IAAM,EAC9D,CAAE,KAAAI,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAKL,EAE1CX,EAAU,UAAYa,EACtBZ,EAAW,UAAYa,EACvBZ,EAAa,UAAYa,EACzBZ,EAAa,UAAYa,EAGzBP,EAAuBA,EAAuB,IAC9C,QAAQ,IAAIA,CAAoB,CACnC,EAAE,GAAI,EAEP,WAAW,IAAM,cAAcC,CAAU,EAAGD,EAAuB,IAAI,KAAS,GAAG,CAEvF,CAAC,EAGD,SAASF,GAAiB,CACtBR,EAAS,SAAW,EACxB,CAEA,SAASa,EAAUK,EAAI,CAQnB,MAAMJ,EAAO,KAAK,MAAMI,EAAK,KAAG,EAE1BH,EAAQ,KAAK,MAAOG,EAAK,MAAO,IAAI,EAEpCF,EAAU,KAAK,MAAQE,EAAK,MAAO,KAAQ,GAAM,EAEjDD,EAAU,KAAK,MAASC,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAJ,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CAC1C"}